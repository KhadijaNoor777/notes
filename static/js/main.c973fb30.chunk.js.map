{"version":3,"sources":["components/Note.js","components/Notes.js","components/AddNote.js","App.js","reportWebVitals.js","index.js"],"names":["Note","props","className","style","background","note","important","onClick","deleteNote","id","Notes","notes","map","AddNote","addNote","useState","newNote","setNewNote","type","placeholder","value","onChange","e","target","marginLeft","preventDefault","App","setNotes","length","console","log","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAoBeA,MAjBf,SAAcC,GAQV,OACI,sBAAKC,UAAU,OAAOC,MAAO,CAACC,WAAYH,EAAMI,KAAKC,UAAW,MAAQ,SAAxE,UACKL,EAAMI,KAAKA,KAEZ,wBAAQE,QAAS,kBAAIN,EAAMO,WAAWP,EAAMI,KAAKI,KAAjD,mBCLGC,MANf,YAAqC,IAArBC,EAAoB,EAApBA,MAAOH,EAAa,EAAbA,WACnB,OAAOG,EAAMC,KAAI,SAACP,GAAD,OACb,cAAC,EAAD,CAAoBA,KAAMA,EAAMG,WAAYA,GAAjCH,EAAKI,QCkBTI,MArBf,YAA6B,IAAXC,EAAU,EAAVA,QAAU,EAEMC,mBAAS,IAFf,mBAEjBC,EAFiB,KAERC,EAFQ,KAYxB,OACI,iCACI,uBAAOC,KAAK,OAAOC,YAAY,gBAAgBC,MAAOJ,EACrDK,SAAU,SAAAC,GAAC,OAAIL,EAAWK,EAAEC,OAAOH,UACpC,wBAAQjB,MAAO,CAACqB,WAAW,QAASjB,QAZzB,SAACe,GAChBA,EAAEG,iBACET,IAEJF,EAAQE,GACRC,EAAW,MAOP,qBC6BGS,MA3Cf,WAAgB,IAAD,EAEaX,mBAAS,CACjC,CACEN,GAAI,EACJJ,KAAM,aACNC,WAAW,GAEb,CACEG,GAAI,EACJJ,KAAM,cACNC,WAAW,GAEb,CACEG,GAAI,EACJJ,KAAM,aACNC,WAAW,KAhBF,mBAENK,EAFM,KAECgB,EAFD,KA8Bb,OACE,sBAAKzB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAASY,QAPC,SAACT,GACfsB,EAAS,GAAD,mBAAKhB,GAAL,CAAY,CAACF,GAAIE,EAAMiB,OAAS,EAAGvB,KAAKA,EAAMC,WAAU,WAQ9D,qBAAKJ,UAAU,QAAf,SACE,cAAC,EAAD,CAAOS,MAAOA,EAAOH,WAhBR,SAACC,GAClBoB,QAAQC,IAAIrB,GACZkB,EAAShB,EAAMoB,QAAO,SAAA1B,GAAI,OAAIA,EAAKI,KAAOA,eCf/BuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c973fb30.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Note(props) {\r\n\r\n    // const deleteNoteBtn = (e) => {\r\n    //     e.preventDefault();\r\n    //     props.deleteNote(props.note.id)\r\n\r\n    //}\r\n\r\n    return (\r\n        <div className='note' style={{background: props.note.important? 'red' : 'green'}}>\r\n            {props.note.note}\r\n            {/* <button onClick={deleteNoteBtn}>x</button> */}\r\n            <button onClick={()=>props.deleteNote(props.note.id)}>x</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\nimport '../App.css';\r\n\r\nfunction Notes({notes, deleteNote}) {\r\n    return notes.map((note) => (\r\n        <Note key={note.id} note={note} deleteNote={deleteNote}/>\r\n    ))\r\n}\r\n\r\nexport default Notes;","import React, {useState} from 'react';\r\nimport '../App.css';\r\n\r\nfunction AddNote({addNote}) {\r\n\r\n    const [newNote, setNewNote] = useState('');\r\n\r\n    const addNewNote = (e) => {\r\n        e.preventDefault();\r\n        if(!newNote)\r\n            return;\r\n        addNote(newNote);\r\n        setNewNote('');\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input type=\"text\" placeholder=\"Enter note...\" value={newNote}\r\n             onChange={e => setNewNote(e.target.value)} />\r\n            <button style={{marginLeft:'10px'}} onClick={addNewNote}>Add</button> \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddNote;\r\n","import React, {useState} from 'react';\nimport Notes from './components/Notes';\nimport AddNote from './components/AddNote';\nimport './App.css';\n\nfunction App() {\n\n  const [notes, setNotes] = useState([\n    {\n      id: 1,\n      note: \"first note\",\n      important: true\n    },\n    {\n      id: 2,\n      note: \"second note\",\n      important: false\n    },\n    {\n      id: 3,\n      note: \"third note\",\n      important: true\n    }\n  ])\n\n  const deleteNote = (id) => {\n    console.log(id);\n    setNotes(notes.filter(note => note.id !== id));\n    //({todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n\n  const addNote = (note) => {\n    setNotes([...notes, {id: notes.length + 1, note:note, important:false }])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='notes'>\n        <AddNote addNote={addNote} />\n      </div>\n      <div className='notes'>\n        <Notes notes={notes} deleteNote={deleteNote} />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}